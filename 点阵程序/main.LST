C51 COMPILER V9.00   MAIN                                                                  08/13/2018 14:33:10 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //点阵显示 亲 - 桃心（形状） 
   2          #include <stc\stc15.h>
   3          #include <intrins.h>
   4          
   5          //点阵模块接口定义
   6          #define LEDARRAY_LAT  P33  //储存寄存器时钟
   7          #define LEDARRAY_CLK  P35 //移位寄存器时钟输入端 
   8          #define LEDARRAY_DI   P34 //串行数据输入端
   9          
  10          //二维数组 内含字摸代码，取摸方式和软件都在本目录内
  11          unsigned char  code Display_word[2][8] = {       //测试用数组
  12          0x00,0x48,0x2A,0x8E,0xFB,0x0E,0x2A,0x48,//亲
  13          0x0C,0x1E,0x3E,0x7C,0x7C,0x3E,0x1E,0x0C //桃心（形状） 
  14          };
  15          
  16          unsigned char code  Default_Word[2][8] = {         
  17          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//全灭
  18          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF //全亮
  19          } ;
  20          unsigned char VBuff[8]; //LED显示缓冲区
  21          
  22          //发送一个直接数据给点阵模块
  23          void Send_Byte( unsigned char dat)
  24          {
  25   1              unsigned char i;//循环次数变量
  26   1              LEDARRAY_CLK = 0;//拉低移位时钟
  27   1              _nop_();        
  28   1              LEDARRAY_LAT = 0;//拉低储存时钟
  29   1              _nop_();
  30   1      
  31   1              for( i = 0 ; i < 8 ; i++ ) //循环8次写入一个字节数据
  32   1              {
  33   2                      if( dat&0x01 )
  34   2                      {
  35   3                              LEDARRAY_DI = 1;        
  36   3                      }
  37   2                      else
  38   2                      {
  39   3                              LEDARRAY_DI = 0;
  40   3                      }
  41   2                      
  42   2                      LEDARRAY_CLK = 1;                               //上升沿发送数据
  43   2                                                      _nop_();
  44   2                      LEDARRAY_CLK = 0;
  45   2                                                      _nop_();
  46   2                                      
  47   2                      dat >>= 1;                      
  48   2              }               
  49   1      }
  50          
  51          void CopyCodeToBuff(unsigned char code  *src) //从程序区复制指定数据到显示缓冲区
  52          {
  53   1      unsigned char k=0;
  54   1      for(k = 0 ; k < 8 ; k++)                
  55   1      {
C51 COMPILER V9.00   MAIN                                                                  08/13/2018 14:33:10 PAGE 2   

  56   2      VBuff[k]=*src++;
  57   2      }
  58   1      }
  59          
  60          void CopyToBuff(unsigned char code  *src) //从数据区区复制指定数据到显示缓冲区
  61          {
  62   1      unsigned char k=0;
  63   1      for(k = 0 ; k < 8 ; k++)                
  64   1      {
  65   2      VBuff[k]=*src++;
  66   2      }
  67   1      }
  68          
  69          /*以下是从stc15示例代码复制并加以修改的部分，需用到STC15的一些特性，可能不能在某些兼容51的单片机上使用*/
  70          #define FOSC 11059200L   //系统时钟11.0592M
  71          
  72          //#define T1MS (65536-FOSC/1000)      //1T模式
  73          #define T50MS (65536-FOSC/12/20) //12T模式
  74          unsigned  long SysClk=0;  //系统时钟记录变量
  75          bit TestFlag=1; //定义一系列标志，TestFlag为是否显示内部测试图像（心形和亲字）
  76          
  77          
  78          void tm0_isr() interrupt 1      //定时器0中断处理函数
  79          {
  80   1          SysClk++;
  81   1          if(TestFlag){ //显示测试点阵图像
  82   2                      if(SysClk%40==0) 
  83   2                      {
  84   3                      CopyCodeToBuff(Display_word[0]);
  85   3                      }
  86   2                      if(SysClk%40==20)
  87   2                       {
  88   3                      CopyCodeToBuff(Display_word[1]);
  89   3                      }
  90   2                      }
  91   1              if(SysClk== 4000000000)  SysClk=0; //系统时钟上界
  92   1      }
  93          void init_tm0() //定时器0初始化
  94          {
  95   1        // AUXR |= 0x80;                   //定时器0为1T模式
  96   1         AUXR &= 0x7f;                   //定时器0为12T模式
  97   1      
  98   1          TMOD = 0x00;                    //设置定时器为模式0(16位自动重装载)
  99   1          TL0 = T50MS;                     //初始化计时值
 100   1          TH0 = T50MS >> 8;
 101   1          TR0 = 1;                        //定时器0开始计时
 102   1          ET0 = 1;                        //使能定时器0中断
 103   1          EA = 1;
 104   1      }
 105          
 106          sbit INT0 = 0xB2; //如果出现编译错误，可注释掉此行，此行主要补充stc15里缺失的定义。
 107           void exint0() interrupt 0       //INT0中断入口
 108          {
 109   1          if(TestFlag=~TestFlag) CopyCodeToBuff(Default_Word[1]);             //测试外部中断，点亮屏幕
 110   1              else                   CopyCodeToBuff(Default_Word[0]);     //测试外部中断，熄灭屏幕
 111   1      }
 112          
 113          void init_exint0()
 114          {
 115   1              INT0 = 1;
 116   1          IT0 = 1;                    //设置INT0的中断类型 (1:仅下降沿 0:上升沿和下降沿)
 117   1          EX0 = 1;                    //使能INT0中断
C51 COMPILER V9.00   MAIN                                                                  08/13/2018 14:33:10 PAGE 3   

 118   1          EA = 1;
 119   1      }
 120          /*stc15修改部分结束*/
 121          
 122          void main()
 123          {
 124   1      
 125   1              unsigned char k, temp;
 126   1              init_tm0(); //初始化定时器0
 127   1              init_exint0(); //初始化外部中断0
 128   1              while(1)   //将缓冲区的内容放到LED点阵上。
 129   1              {
 130   2                              temp = 0x7f;
 131   2                              for(k = 0 ; k < 8 ; k++)                //一个字母8BYTE
 132   2                              {
 133   3                                      Send_Byte(temp);                        //列选择
 134   3                                      Send_Byte(VBuff[k]);                    //行数据
 135   3                                      LEDARRAY_LAT = 1;                                       //锁存数据
 136   3                                      _nop_();
 137   3                              
 138   3                                      LEDARRAY_LAT = 0;
 139   3                                      _nop_();
 140   3                                      temp = (temp>>1)|0x80;
 141   3                              }
 142   2                      
 143   2                              
 144   2              }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    419    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
